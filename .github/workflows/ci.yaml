name: ci

on:
  push:
    tags:
      - v*
    branches:
      - master

jobs:
  ci:
    name: ci
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Fetch git tags
        run: git fetch --unshallow && git fetch --tags origin

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 17
          cache: gradle

      - name: Save google-services.json
        shell: bash
        env:
          GOOGLE_PLAY_SERVICES_JSON: ${{ secrets.GOOGLE_PLAY_SERVICES_JSON }}
        run: echo "$GOOGLE_PLAY_SERVICES_JSON" > client/android/google-services.json

      - name: Run gradle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        run: >-
          ./gradlew
          -PpIsGoogleServicesEnabled=true
          -PpIsGithubActions=true
          -PpUseReleaseKeys=true
          :ci

      - name: Upload debug apk
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: "client/android/build/outputs/apk/debug/**.apk"
          if-no-files-found: error

      - name: Upload release apk
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: "client/android/build/outputs/apk/release/**.apk"
          if-no-files-found: error

      - name: Upload debug wv apk
        uses: actions/upload-artifact@v3
        with:
          name: debug-wv-apk
          path: "client-wv/android/build/outputs/apk/debug/**.apk"
          if-no-files-found: error

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "Create release test output"